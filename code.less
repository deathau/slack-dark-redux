/* Code syntax highlighting */
:root {
    --background: #1d1f21;
    --border: #282a2e;
    --color: #e0e0e0;
    --gutter: #81a2be;
    --focus: #969896;
    --negative: #bf360c;
    --positive: #0c95bf;
    --keyword: #569cd6;
    --atom: #9fa8da;
    --number: #b5cea8;
    --def: #569cd6;
    --variable: #9cdcfe;
    --variable-2: #4ec9b0;
    --variable-3: #d7ba7d;
    --operator: #c586c0;
    --property: #9cdcfe;
    --comment: #505050;
    --string: #ce9178;
    --string-2: #ce9178;
    --meta: #e0e0e0;
    --qualifier: #e0e0e0;
    --builtin: #e0e0e0;
    --bracket: #e0e0e0;
    --tag: #569cd6;
    --attribute: #4ec9b0;
    --header: #569cd6;
    --quote: #608b4e;
    --hr: #e0e0e0;
    --link: #569cd6;
}

code {
    background-color: var(--background);
    border: 1px solid var(--border);
    color: var(--color);
}

.file_list_item.snippet .snippet_preview {
    background: var(--background);
}

.snippet_preview,
.snippet_body {
    background: var(--background);
}

.snippet_preview pre,
.snippet_body pre {
    color: var(--color) !important;
}

.file_container .CodeMirror .CodeMirror-code>div::before,
.file_container .CodeMirror .sssh-line::before,
.file_container .sssh-code .CodeMirror-code>div::before,
.file_container .sssh-code .sssh-line::before {
    background-color: var(--border);
    border-right: 1px solid var(--border);
    color: var(--gutter);
}

.c-snippet__code .CodeMirror {
    background: var(--background);
    border: 1px solid var(--border);
    color: var(--color);
}

.c-snippet__code .CodeMirror pre {
    background: transparent !important;
}

.c-snippet__code .CodeMirror div.CodeMirror-cursor {
    border-left: 1px solid var(--color);
}

.c-snippet__code .CodeMirror.cm-fat-cursor div.CodeMirror-cursor {
    background: var(--color);
}

.c-snippet__code .CodeMirror .CodeMirror-gutters {
    background-color: var(--border);
    border-right: 1px solid var(--border);
}

.CodeMirror-gutter-filler,
.CodeMirror-scrollbar-filler {
    background-color: var(--border);
}

.CodeMirror-linenumber {
    color: var(--gutter) !important;
}

.CodeMirror-guttermarker {
    color: var(--gutter);
}

.CodeMirror-guttermarker-subtle {
    color: var(--gutter);
}

.CodeMirror-ruler {
    border-left: 1px solid var(--focus);
}

.cm-s-default .cm-keyword,
.sssh-keyword {
    color: var(--keyword);
}

.cm-s-default .cm-atom,
.sssh-atom {
    color: var(--atom);
}

.cm-s-default .cm-number,
.sssh-number {
    color: var(--number);
}

.cm-s-default .cm-def,
.sssh-def {
    color: var(--def);
}

.cm-s-default .cm-variable,
.sssh-variable {
    color: var(--variable);
}

.cm-s-default .cm-variable-2,
.sssh-variable-2 {
    color: var(--variable-2);
}

.cm-s-default .cm-variable-3,
.sssh-variable-3 {
    color: var(--variable-3);
}

.sssh-operator {
    color: var(--operator);
}

.sssh-property {
    color: var(--property);
}

.cm-s-default .cm-comment,
.sssh-comment {
    color: var(--comment);
}

.cm-s-default .cm-string,
.sssh-string {
    color: var(--string);
}

.cm-s-default .cm-string-2,
.sssh-string-2 {
    color: var(--string-2);
}

.cm-s-default .cm-meta,
.sssh-meta {
    color: var(--meta);
}

.cm-s-default .cm-qualifier,
.sssh-qualifier {
    color: var(--qualifier);
}

.cm-s-default .cm-builtin,
.sssh-builtin {
    color: var(--builtin);
}

.cm-s-default .cm-bracket,
.sssh-bracket {
    color: var(--bracket);
}

.cm-s-default .cm-tag,
.sssh-tag {
    color: var(--tag);
}

.cm-s-default .cm-attribute,
.sssh-attribute {
    color: var(--attribute);
}

.cm-s-default .cm-header,
.sssh-header {
    color: var(--header);
}

.cm-s-default .cm-quote,
.sssh-quote {
    color: var(--quote);
}

.cm-s-default .cm-hr,
.sssh-hr {
    color: var(--hr);
}

.cm-s-default .cm-link,
.sssh-link {
    color: var(--link);
}

.cm-negative {
    color: var(--negative);
}

.cm-positive {
    color: var(--positive);
}

.cm-invalidchar,
.cm-s-default .cm-error,
.sssh-error {
    color: var(--negative);
}

.c-snippet__code div.CodeMirror span.CodeMirror-matchingbracket {
    color: var(--positive);
}

.c-snippet__code div.CodeMirror span.CodeMirror-nonmatchingbracket {
    color: var(--negative);
}

.CodeMirror-matchingtag {
    background: var(--background);
}

.CodeMirror-activeline-background {
    background: var(--focus);
}

.CodeMirror-selected {
    background: var(--focus);
}

.CodeMirror-focused .CodeMirror-selected {
    background: var(--focus);
}

.cm-searching {
    background: var(--focus);
}